name: deploy

on:
  workflow_dispatch:
  repository_dispatch:
    types: [document-changed]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Issue Github App Token
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ secrets.VINGLE_GITHUB_APP_ID }}
          private-key: ${{ secrets.VINGLE_GITHUB_APP_SECRET}}
          owner: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy documents
        run: |
          git clone --depth 1 --filter=blob:none --sparse https://x-access-token:${{ steps.app_token.outputs.token }}@github.com/cosmos-official/${{ vars.TARGET_REPOSITORY }} temp-repo
          cd temp-repo
          git sparse-checkout set docs
          mv docs/* ../src/content/docs
          cd ..
          rm -rf temp-repo

      - name: Update astro config with variables
        run: |
          if [ -n "${{ vars.DOCUMENT_URL }}" ]; then
            sed -i "s|const DOCUMENT_DOMAIN = '.*';|const DOCUMENT_DOMAIN = '${{ vars.DOCUMENT_URL }}';|" astro.config.mjs
            echo "DOCUMENT_DOMAIN updated to ${{ vars.DOCUMENT_URL }}"
          fi
          if [ -n "${{ vars.DOCUMENT_TITLE }}" ]; then
            sed -i "s|const DOCUMENT_TITLE = '.*';|const DOCUMENT_TITLE = '${{ vars.DOCUMENT_TITLE }}';|" astro.config.mjs
            echo "DOCUMENT_TITLE updated to ${{ vars.DOCUMENT_TITLE }}"
          fi
          if [ -n "${{ vars.TARGET_REPOSITORY }}" ]; then
            sed -i "s|const TARGET_REPOSITORY = '.*';|const TARGET_REPOSITORY = '${{ vars.TARGET_REPOSITORY }}';|" astro.config.mjs
            echo "TARGET_REPOSITORY updated to ${{ vars.TARGET_REPOSITORY }}"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        run: npm ci

      - name: Build Astro Site
        run: npm run build

      - name: Upload as an artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy Pages
        uses: actions/deploy-pages@v4
